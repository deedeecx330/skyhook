#!/usr/bin/env python3

import os, sys, db, updown, config

def main(command, target):

    if command == "list" and target == "history":
        db.listDb()

    if command == "list" and target == "keys":
        db.listKeys()

    elif command == "clear" and target == "history":
        db.clearDb()

    elif command == "search":
        for tar in target.split(','):
            db.searchDb(tar)

    elif command == "export":
        res = db.exportDb(target)
        if res == 1:
            print("[!] Error exporting history to {}".format(target))
        else:
            print("[+] Successfully exported history to {}".format(target))

    elif command == "save":
        workDir = os.getcwd() 
        for tar in target.split(','):
            os.chdir(workDir)
            res = db.saveOne(tar)
            if res == 1:
                print("[!] Could not find {} in local history".format(tar))
            elif res == 2:
                print("[!] Error saving {} to local directory".format(tar))
            else:
                print("[+] Successfully saved {} to local directory".format(tar))

    elif command == "import":
        workDir = os.getcwd() 
        for tar in target.split(','):
            os.chdir(workDir)
            res = db.importDb(tar)
            if res == 1:
                print("[!] Could not read {}".format(tar))
            elif res == 2:
                print("[!] Could not import {}".format(tar))
            elif res == 3:
                print("[!] No entries in {}".format(tar))
            else:
                print("[+] Successfully imported {}".format(tar))

    elif command == "delete":
        workDir = os.getcwd() 
        for tar in target.split(','):
            os.chdir(workDir)
            res = db.deleteItem(tar)
            if res == 1:
                print("[!] Could not find {} in history".format(tar))
            elif res == 2:
                print("[!] Could not delete {} from history".format(tar))
            else:
                print("[+] Successfully deleted {} from history".format(tar))

    elif command == "upload":
        workDir = os.getcwd() 
        for tar in target.split(','):
            os.chdir(workDir)
            res = updown.uploadFile(tar)
            if res == 1:
                print("[!] Could not find {}".format(tar))
            elif res == 2:
                print("[!] Could not encrypt {}".format(tar))
            elif res == 3:
                print("[!] Could not upload {}".format(tar))
            elif res == 4:
                print("[!] Could not add an entry for {}".format(tar))
            else:
                print("[+] Successfully uploaded {}".format(tar))

    elif command == "download":
        workDir = os.getcwd() 
        for tar in target.split(','):
            os.chdir(workDir)
            res = updown.downloadFile(tar)
            if res == 1:
                print("[!] Could not retrieve {} from history".format(tar))
            elif res == 2:
                print("[!] Could not download {}".format(tar))
            elif res == 3:
                print("[!] Could not decrypt {}".format(tar))
            else:
                print("[+] Downloaded {} successfully".format(res))
                
    else:
        print(config.usage)
        return(1)

if __name__ == "__main__":

    if len(sys.argv) != 3:
        print(config.usage)
        exit()

    command = str(sys.argv[1])
    target = str(sys.argv[2])

    main(command, target) 
